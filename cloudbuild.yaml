# Used by Google Cloud Build to run cel-cpp conformance tests and generate necesary file structure for TestGrid dashboard in Google Cloud Storage
steps:
        - name: 'gcr.io/cloud_builders/wget'
          args: ['http://tukaani.org/xz/xz-5.2.4.tar.gz']
        - name: 'gcr.io/cloud_builders/wget'
          args: ['http://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz']
        - name: 'ubuntu'
          args: ['ls', '-la']
        - name: 'ubuntu'
          args: ['tar', 'xvzf', 'xz-5.2.4.tar.gz']
        - name: 'ubuntu'
          args: ['ls']
        - name: 'ubuntu'
          args: ['cd', 'xz-5.2.4']
        - name: 'ubuntu'
          args: ['./configure']
        - name: 'ubuntu'
          args: ['make']
        - name: 'ubuntu'
          args: ['make', 'install']
        - name: 'ubuntu'
          args: ['tar', 'xvf', 'clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz']
        - name: 'ubuntu'
          args: ['mv', 'clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz', '/usr/local']
        - name: 'ubuntu'
          # writes start time and #PR to started.json
          args: ['bash', 'conformance/start.sh', '$COMMIT_SHA']
        # Because testgrid uses monotonically increasing, numerical ids as folder names and GCB generates random ids, the timestamp
        # at start is recorded and written to a file, then read at the end to ensure monotonically increasing numbers.
        - name: 'ubuntu'
          # stores timestamp in _DATE to use as build id
          args: ['bash', '-c', 'date +%s > _DATE' ]
        - name: 'gcr.io/cloud-builders/gsutil'
          # writes _DATE to GCS bucket so it can be used as GCS folder name
          args: ['cp', '-r', '_DATE', 'gs://cel-conformance']
          #   - name: 'gcr.io/cloud-builders/bazel'
          # run conformance tests with bazel
          #   args: ['test', '--test_output=all', 'conformance/simple-test.sh']
          #   timeout: '1200s' # extend timeout of this step, default is 10 min
        - name: 'ubuntu'
          # creates necessary format and folder structure for TestGrid to parse
          args: ['bash', 'conformance/zip.sh']
        - name: 'gcr.io/cloud-builders/gsutil'
          entrypoint: sh
          # deploys folder of test results (with build id as folder name) to GCS
          args: ['-c', 'gsutil cp -r $(cat _DATE) gs://cel-conformance/cpp-test-logs/']
timeout: '1200s' # overall build timeout
